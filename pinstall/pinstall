#!/usr/bin/env bash

function error_echo() {
  echo -e "\e[01;31m${@}\e[0m"
}

name=()
content=()
file=()

parsed=$(pflags parse --name "$(basename "$0")" \
  ---- -l name -t string --default '' --help "Name of the installation" \
    -- -l content -t string --default '' --help "Content needs to be written to the installed file" \
    -- -l file -t string --default '' --help "Path of file being installed" \
    -- -l quiet -t bool --help "Stop printing installation logs" \
  ---- "$@") || exit $?
pflags printhelp $parsed && exit

name=$(pflags get -n name "$parsed" ) || exit $?
content=$(pflags get -n content "$parsed" ) || exit $?
file=$(pflags get -n file "$parsed" ) || exit $?
quiet=$(pflags get -n quiet "$parsed" ) || exit $?

[ "$name" == "" ] && [ "$content" == "" ] && [ "$file" == "" ] && { error_echo "No argument provided."; exit 1; }
[ ! "$content" == "" ] && [ ! "$file" == "" ] && { error_echo "Only one of --content or --file is expected."; exit 1; }
[ ! "$content" == "" ] && [ "$name" == "" ] && { error_echo "--name is required argument along with --content."; exit 1; }

[ "$name" == "" ] && name="$(basename "$(realpath "$file")")"

installation_path="$HOME/.local/bin/"
[ -d $HOME/.local/bin ] || mkdir -p $HOME/.local/bin

default_bash='#!\/usr\/bin\/env\ bash'
evaluated_bash="#!"
evaluated_bash+="$(/usr/bin/env | grep SHELL | tr '=' '\n' | tail -n 1)"
evaluated_bash="${evaluated_bash//\//\\/}"
sed_args=()
[[ "$OSTYPE" == "darwin"* ]] && sed_args+=( "" )
sed_args+=( "s/$default_bash/$evaluated_bash/1" )

rp=""
if [ ! "$content" == "" ]
then
  rp="/tmp/$name"
  printf "$content" > "$rp"
else
  rp="$(realpath "$file")"
fi

wp="${installation_path}${name}"

[ -f "$rp" ] || { echo "Installation failed, $rp file do not exist"; exit 1; }

[ "$quiet" == "true" ] || echo "Installing: $name"
cp "$rp" "$wp" && chmod +x "$wp" || { echo "Installation failed"; exit 1; }
sed -i "${sed_args[@]}" "$wp"
